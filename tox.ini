[vars]
METRICS_MODULE = metrics
METRICS_SOURCE = {[vars]METRICS_MODULE}
MYPY_SOURCE_ARGS = --strict
                   --ignore-missing-imports
                   --allow-untyped-decorators

[tox]
envlist = mypy,
          black,
          pylint,
          yamllint,
          bandit,
          safety
skipsdist = True

[testenv:pylint]
basepython = python3
skip_install = true
deps = -r requirements-dev.txt
       -r requirements.txt
commands = pylint {[vars]METRICS_SOURCE} \
                  --min-similarity-lines 6 \
                  --max-line-length 88 \
                  -d fixme,unsubscriptable-object


[testenv:black]
deps = -r requirements-dev.txt
commands = black --check --diff .

[testenv:black-format]
# this step format code automatically based on black rules
# it can be triggered manually
deps = -r requirements-dev.txt
commands = black .

# Static analysis for python
# requires type-hints
# https://mypy.readthedocs.io/en/latest/
[testenv:mypy]
deps = -r requirements-dev.txt
commands = mypy {[vars]MYPY_SOURCE_ARGS} {[vars]METRICS_SOURCE}

[testenv:yamllint]
basepython = python3
deps = -r requirements-dev.txt
files =
    .
commands =
    yamllint -s {[testenv:yamllint]files}

[testenv:bandit]
deps =  -r requirements-dev.txt
commands = bandit -r mercury -ll

[testenv:safety]
deps =  -r requirements-dev.txt
commands = safety check \
       -r requirements.txt \
       -r requirements-dev.txt \
       -i 45114
